#!/usr/bin/env bash

THIS_DIR=$(cd $(dirname $0); pwd)
cd $THIS_DIR
red() {
  printf '\e[1;31m%s\n\e[0;39;49m' "$@"
}
green() {
  printf '\e[1;32m%s\n\e[0;39;49m' "$@"
}
white() {
  printf '\e[1;37m%s\n\e[0;39;49m' "$@"
}
prtred() {
	printf '\e[1;31m%s\n\e[0;39;49m' "$@"
}
# Print text in green
prtgrn() {
	printf '\e[1;32m%s\n\e[0;39;49m' "$@"
}
# Print text in brown
prtbrown() {
	printf '\e[1;33m%s\n\e[0;39;49m' "$@"
}
login(){
red "Enter Your Bot Profile ID:"
green "ایدی ربات خود را وارد کنید:"
read Profile
red "Enter Phone Number with pre code of country +
ex. : +989********"
green "شماره خودرا با پیش کد کشور وارد کنید
مثال : +989********"
read Phone
./tg -p tabi-$Profile --login --phone =$Phone
white "ربات شما ساخته شد.برای اجرا کردن آن"
green "./tabi $Profile"
white "جهت اجرا به شکل اتولانچ هم از "
green "tmux new-session -s script 'bash tabi autolaunch'"
white "استفاده کنید"
}
create() {
  name=tabi
  if [[ -e $name.lua ]] ; then
      i=1
      while [[ -e $name-$i.lua ]] ; do
          let i++
      done
      name=$name-$i
  fi
red "Your Profile ID: $i"
green "ایدی پروفایل ربات شما: $i"
red "Enter Phone Number with pre code of country +
ex. : +989********"
green "شماره خودرا با پیش کد کشور وارد کنید
مثال : +989********"
read Phone
./tg -p tabi-$i --login --phone =$Phone
echo "" > tabi-$i.sh
exec 3<> tabi-$i.sh
    # Let's print some text to fd 3
    echo "while true; do" >&3
    echo "./tg -p tabi-$i -s ${HOME}/tabi/tabi-$i.lua | grep -v" >&3
    echo "done" >&3
	
# Close fd 3
exec 3>&-
chmod 777 tabi-$i.sh
cat tabi.lua >> tabi-$i.lua
sed -i 's/BOT-ID/'$i'/g' tabi-$i.lua
#cat tabi.lua >> tabi-$i.lua
#sed -i 's/BOT-ID/'$i'/g' tabi-$i.lua
white "ربات شما ساخته شد.برای اجرا کردن آن"
green "./tabi $i"
white "جهت اجرا به شکل اتولانچ هم از "
green "tmux new-session -s script 'bash tabi autolaunch'"
white "استفاده کنید"
}
usage() {
printf "\e[1;36m"
  cat <<EOF
راهنمای استفاده از راه انداز تبلیغاتی
:گزینه ها
./tabi create
ساخت ربات جدید
./tabi install
نصب پیش نیاز های تبلیغاتی
./tabi login
ورود به یک ربات از قبل ساخته شده
./tabi help
نمایش این متن
./tabi clear
پاک سازی یک ربات
tmux new-session -s script "bash tabi autolaunch"
راه‌اندازی تمام ربات ها هر 20 دقیقه
./tabi auto
راه اندازی با tmux
EOF
printf "%s\n\e[0;39;49m"
}
clear() {
  green '
       شماره تبلیغاتیی که میخواهید آن را حذف کنید وارد کنید
'
  read -rp ' ' ID
  rm -rf ~/.tg/tabi-"$ID"
  rm -rf tabi-"$ID".lua
 rm -rf tabi-"$ID".sh
  rm -rf rm -rf ~/.telegram-bot/tabi-"$ID"
  red '
     تبلیغاتی شماره '$ID' با موفقیت حذف شد
'
  exit
}
autolaunch() {
while true ; do
    for tabi in tabi-*.sh ; do
      tab="${tabi%.*}"
      ltab="${tab/-/ }"
screen -S $tab -X quit
#      tmux kill-session -t $tab
     for tg in ~/.telegram-bot/$tab/data/* ; do
        rm -rf $tg/*
      done
 screen -d -m -S $tab ./$tab.sh
rm -rf ~/.telegram-bot/$tab/files/animations 
rm -rf ~/.telegram-bot/$tab/files/documents 
rm -rf ~/.telegram-bot/$tab/files/music 
rm -rf ~/.telegram-bot/$tab/files/photos 
rm -rf ~/.telegram-bot/$tab/files/temp 
rm -rf ~/.telegram-bot/$tab/files/video_notes 
rm -rf ~/.telegram-bot/$tab/files/videos 
rm -rf ~/.telegram-bot/$tab/files/voice
rm -rf ~/.telegram-bot/$tab/data/temp 
rm -rf ~/.telegram-bot/$tab/data/secret_thumbnails 
rm -rf ~/.telegram-bot/$tab/data/secret 
rm -rf ~/.telegram-bot/$tab/data/profile_photos 
rm -rf ~/.telegram-bot/$tab/data/thumbnails 
rm -rf ~/.telegram-bot/$tab/data/stickers 
rm -rf ~/.telegram-bot/$tab/data/wallpapers     
 #TMUX= tmux new-session -d -s $tab "./$ltab"
      #tmux detach -s $tab
    done
    echo -e " \n\e[1;32m BOT RUNNED WITH TMUX AUTOLAUNCHER \n\e[1;34m"
	echo -e "\e[1;32m WRITTEN BY: @CaltMan in @Stags\n\e[0;39;49m"
	echo -e "\e[1;32m TABLIGHATI V1.1 STAGSBOT V1.3.1\n\e[0;39;49m"
	echo -e "\e[1;32m UNDELETED SOURCE, ENJOYING :)\n\e[0;39;49m"
    sleep 1200
  done 
  while true ; do
for tabi in tabi-*.sh ; do
      tab="${tabi%.*}"
      ltab="${tab/-/ }"
rm -rf ~/.telegram-bot/$tab/data/db.sqlite
  sleep 12600
  done
done
}
install() {
prtgrn '
   *//Do you want to install Essentials of Tablighati? (Y/N):
 '
	read -rp ' ' install
	case "$install" in
    Y|y|بله)
	prtgrn '
	*//Enter SUDO ID(who can add sudo with #addallsudo or #addsudo):
 '
 read sudoid
	sed -i 's/123456789/'$sudoid'/g' tabi.lua
	prtgrn '
	*//Change Nameservers to Google:
 '
	sudo echo "nameserver 8.8.8.8" | sudo tee /etc/resolv.conf > /dev/null
		prtgrn '
 *//Fetching Espicial StagsBot(Tablighati v1.3.1):
 */Enter Your Username:
 '
read username
prtgrn '
 */Enter Your Password:
 '
read password
prtgrn '
 */Enter Your Folder:
 '
read tgname
prtgrn '
 */If the information will be true you see download menu below:
 '
 wget "https://stags.ir/StagsBot/$tgname/tg" --user=$username --password=$password -O tg

	chmod +x tg
	prtgrn '
 *//Updating old packages:
 '
sudo apt-get -y update && sudo apt-get -y upgrade 
prtgrn '
 *//Installing Essentials packages:
 '
	sudo apt-get --force-yes install git wget screen tmux libconfig++9v5 libconfig9 libevent-dev libjansson4 libstdc++6 lua-socket lua5.2 liblua5.2 make unzip redis-server software-properties-common g++ libconfig++-dev
	sudo apt-get -y update && sudo apt-get -y upgrade
 sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test && sudo apt-get -y update && sudo apt-get --force-yes install gcc-4.9 g++-4.9 && sudo update-alternatives —install /usr/bin/gcc gcc /usr/bin/gcc-4.9 60 —slave /usr/bin/g++ g++ /usr/bin/g++-4.9
prtgrn '
 *//Updating packages:
 '
	sudo apt-get -y update && sudo apt-get -y upgrade && sudo apt-get -y dist-upgrade && sudo apt-get -y autoremove
	prtgrn '
 *//Restarting redis service:
 '
	sudo service redis-server restart
	white '
تبلیغاتی نصب شد.حال برای راه اندازی از دستور 
./tabi create
استفاده کنید'
green '
برای دریافت لیست لانچر دستور
./tabi help
راارسال کنید'
 ;;
    N|n|خیر)
		prtbrown '
        لغو عملیات
 Canceling the operation
 '
    ;;
    *)
		prtred '
    دستور اشتباه
  Wrong command
 '
		install
    ;;
esac
}
auto() {
	tmux kill-session -t script
tmux new-session -s script "bash tabi autolaunch"
}

case $1 in
  create)
    create
  ;;
  install)
    install
  ;;
    clear)
    clear
  ;;
  login)
    login
  ;;
  autolaunch)
    autolaunch
  ;;
    auto)
    auto
  ;;
  help)
    usage
  ;;
  a*)
    id="${1/a/}"
    if [ -a "$THIS_DIR"/tabi-"$id".sh ]; then
      screen -x -s tabi-"$id" quit
      while true ; do
        screen -s tabi-"$id" ./tabi-"$id".sh
        sleep 10
      done
    else
      usage
    fi
  ;;
  clr)
    clear
  ;;
  *)
    if [ -a "$THIS_DIR"/tabi-"$1".sh ]; then
      ./tabi-"$1".sh
    else
    usage
    fi
  ;;
esac
